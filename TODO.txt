Configuration
=============
- Create a single global settings location (currently simulator_settings.py)
- Integrate settings with the xig_config.py file?
- Try to keep location of settings to a minimum (XBee, RCI, and ADDP - only three places?)
- Store settings in JSON file (including MAC address and device ID).

ADDP
====
- Send error responses (if necessary) for unsupported commands.
- Consider supporting commands to configure the iDigi server settings via ADDP.
   - Requires addition of persistent state.
- Support configuration commands?

EDP
===
- Support other push methods than HTTP PUT (like the Messaging Facility).
- Support passwords.
- Change to using a thread instead of a state machine with tick?

RCI
===
- Edit query_settings and query_state so developer.idigi.com lists useful information for Device Properties.
- Make improvements to local web server feature.
- Fully support the do_command target "zigbee"?

ZigBee
======

GUI
===
- Current plan is to create webpage as GUI.
- XIG interface
- simulated XIG client

XIG
===
- local ip address isn't valid until after iDigi connection completes.
- turn all of the prints into logging
- do redirect on http error code 300s
- store mac/eui-64/ip addresses as an int

Mac
===
- How do people typically install Python on a Mac?
- test

Linux
=====
-test

Release
=======
- In addition to source code, use py2exe (Win) and py2app (Mac) to generate standalone applications for people who don't want to install Python.
